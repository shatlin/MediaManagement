@model MediaManager.Areas.Acquisition.ViewModels.ViewLicenseModel
@{
    ViewBag.Title = "ViewLicenseDetails";
    
}

<h3>Licnse Review</h3>

<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css"
    type="text/css" />
<script src="http://code.jquery.com/jquery-1.8.3.js" type="text/javascript"></script>
<script src="http://code.jquery.com/ui/1.9.2/jquery-ui.js" type="text/javascript"></script>
<script src="~/Content/Scripts/Jquery_AutoComplete.js" type="text/javascript"></script>
<link href="../../../../Content/Project.css" rel="stylesheet" />
<script src="../../../../Content/Scripts/jquery-latest.min.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/slick.grid.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/slick.core.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/jquery.event.drag-2.0.min.js" type="text/javascript"></script>
<link href="../../../../Content/slick.grid.css" rel="stylesheet" type="text/css" />
<script src="../../../../Content/Scripts/firebugx.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/jquery-1.7.min.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/jquery-ui-1.8.16.custom.min.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/jquery.event.drag-2.0.min.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/slick.core.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/slick.cellrangedecorator.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/slick.cellrangeselector.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/slick.cellselectionmodel.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/slick.formatters.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/slick.editors.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/slick.grid.js" type="text/javascript"></script>
<script src="../../../../Content/Scripts/slick.rowmovemanager.js" type="text/javascript"></script>
<link rel="stylesheet" href="../../../../Content/slick.grid.css" type="text/css" />
<link rel="stylesheet" href="../../../../Content/jquery-ui-1.8.16.custom.css" type="text/css" />
<link rel="stylesheet" href="../../../../Content/examples.css" type="text/css" />
<link href="../../../../Content/slick.pager.css" rel="stylesheet" type="text/css" />
<link href="../../../../Content/slick-default-theme.css" rel="stylesheet" type="text/css" />
<link href="../../../../Content/slick.grid.css" rel="stylesheet" type="text/css" />
<script src="../../../../Content/Scripts/jquery-1.8.3.js" type="text/javascript"></script>



<script language="javascript" type="text/javascript">

    var gridFirst;
    var gridSecond;
    var gridThree;
    var myData = [];
    var selectedvalue;
    var currentrecord = 0;
    var recordcount = 0;


    var columnsLineUp = [
                    { id: "LineupPerMonth", name: "No", field: "LineupPerMonth" },
                    { id: "LineupPerYear", name: "Yr", field: "LineupPerYear" },
                    { id: "LinupStatus", name: "Stat", field: "LinupStatus" },
                    { id: "ChannelShortName", name: "Channel", field: "ChannelShortName" },
                    { id: "SchStartDate", name: "Sch Start Date", field: "SchStartDate" },
                    { id: "SchEndDate", name: "Sch End Date", field: "SchEndDate" }


                ];

    var columnsSchInfo = [
                    { id: "SchedulePerMonth", name: "Mo", field: "SchedulePerMonth" },
                    { id: "SchedulePerYear", name: "Yr", field: "SchedulePerYear" },
                    { id: "ScheduleDate", name: "Date", field: "ScheduleDate" },
                    { id: "ScheduleType", name: "PD", field: "ScheduleType" },
                    { id: "SchChannelName", name: "Channel", field: "SchChannelName" }
                    ];

    var columnsSummary = [
                    { id: "ChannelShortName", name: "Channel", field: "ChannelShortName" },
                    { id: "ScheduleType", name: "Id", field: "ScheduleType" },
                    { id: "ScheduleTotal", name: "Scheduled", field: "ScheduleTotal" }

                ];


    var options = {
        enableCellNavigation: true,
        enableColumnReorder: false,
        forceFitColumns: true,
        editable: true,
        enableAddRow: true,
        asyncEditorLoading: false,
        enableColumnReorder: false,
        autoEdit: true
    };



    $('#nextbtn').prop("disabled", false);
    $('#previousbtn').prop("disabled", true);



    $.ajax({

        url: '@Url.Action("GetData", "ViewLicense", new { area = "Acquisition" })',
        type: "POST",
        dataType: 'Json',
        data: {},

        success: function (data) {

            myData = data.First;
            recordcount = myData.length;
            var item = myData[currentrecord];
            BindData(item);



        },
        error: function () {
            alert("error");
        }
    });                                                //end of jax call




    function firstgrid(myDataFirst) {
        gridFirst = new Slick.Grid("#gridLineUpInfo", myDataFirst, columnsLineUp, options);

    };

    function secondgrid(myDataSecond) {

        gridSecond = new Slick.Grid("#gridScheduleInfo", myDataSecond, columnsSchInfo, options);

    };

    function thirdgrid(myDataThird) {

        gridThree = new Slick.Grid("#gridInfo", myDataThird, columnsSummary, options);

    };

    function BindData(item) {
        firstgrid(item.LinupSchVOList);
        secondgrid(item.SchProgramScheduleVOLIst);
        thirdgrid(item.SchSummaryVOLIst);

        $("#txtLicNo").val(item.LicNumber.toString());
        $("#txtTitle").val(item.ProgramTitle);
        $("#txtProgRefNo").val(item.ProgramrefNo.toString());
        $("#txtLicenseStatus").val(item.LicStatus);
        $("#txtWorkingTitle").val(item.ProgramWorkingTitle);

        //             $("#chkExclusive").val(item.Exclusive);
        //             $("#chkPremier").val(item.Premier);


        $("#chkExclusive").checked = false;
        $("#chkPremier").checked = false;

        //           if (prgLicReviewVO.LicExclusive != null) {
        //               if (prgLicReviewVO.LicExclusive.CompareTo("Y") == 0)
        //                   objViewLicenseModel.Exclusive = true;
        //               else
        //                   objViewLicenseModel.Exclusive = false;
        //           }

        //           if (prgLicReviewVO.PremierFlag != null) {
        //               if (prgLicReviewVO.PremierFlag.CompareTo("Y") == 0)
        //                   objViewLicenseModel.Premier = true;
        //               else
        //                   objViewLicenseModel.Premier = false;
        //           }
        //           else
        //               objViewLicenseModel.Premier = false;

        $("#txtLicencee").val(item.LicenseeShortName);
        $("#txtContract").val(item.ContractName);

        $("#txtContractNo").val(item.ContractShortName.toString());
        $("#txtChannel").val(item.ChannelServiceName);



        $("#txtStartLicPer").val(item.LicStart);
        $("#txtLicPerAmort").val(item.LicShowingLic);

        $("#txtPlay").val(item.LicPlayStatus);
        $("#txtStatus").val(item.StatusDescription);

        // $("#txtFirstShow").val(item.LicShowingFirst.toString("dd-MMM-yy"));
        $("#txtFirstShow").val("");
        $("#txtPaidRuns").val(item.LicShowingPaid.toString());

        $("#txtEndLicPer").val(item.LicEnd);
        $("#txtTotLicRuns").val(item.LicShowingInt.toString());

        $("#txtReg").val(item.RegistrationDate.toString("dd-MMM-yy"));
        $("#txtLicName").val(item.RegistrationDetails);

        $("#txtLastShow").val(item.LicShowingLast.toString("dd-MMM-yy"));
        $("#txtFreeRuns").val(item.LicShowingFree.toString());
    }



    function previous_click() {


        if (currentrecord > 0) {
            currentrecord = currentrecord - 1;
            manageprevnext();
            var item1 = myData[currentrecord];
            BindData(item1);
        }
    }

    function next_click() {

        if (currentrecord < (recordcount - 1)) {
            currentrecord = currentrecord + 1;
            manageprevnext();
            var item2 = myData[currentrecord];
            BindData(item2);

        }
    }

    function manageprevnext() {

        if (currentrecord >= (recordcount - 1)) {
            $('#nextbtn').prop("disabled", true);
        }
        else {
            $('#nextbtn').prop("disabled", false);
        }

        if (currentrecord <= 0) {
            $('#previousbtn').prop("disabled", true);
        }
        else {
            $('#previousbtn').prop("disabled", false);
        }
    }




  
</script>

<div>

<table id="tblMain" >

  <tr>
   <td>Lic#</td>
   <td>
    @* @Html.TextBoxFor(m => m.LicNo, new { @class = "inputTextSamller" })*@
    <input type="text" id="txtLicNo" />    
   </td>
   <td>
        @*@Html.TextBoxFor(m => m.Title, new { @class = "inputTextSamller" })</td>*@
         <input type="text" id="txtTitle" />
   <td>
       @*@Html.TextBoxFor(m => m.ProgRefNo, new { @class = "inputTextSamller" })*@
        <input type="text" id="txtProgRefNo" />
       </td>
   <td>Status</td>
   <td>
      @* @Html.TextBoxFor(m => m.LicenseStatus, new { @class = "inputTextSamller" })</td>*@
        <input type="text" id="txtLicenseStatus" />
 </tr>

  <tr>
   <td>Working Title</td>
   <td>
      @* @Html.TextBoxFor(m => m.WorkingTitle, new { @class = "inputTextSamller" })</td>*@
        <input type="text" id="txtWorkingTitle" />
   <td>
       @*@Html.CheckBoxFor(m => m.Exclusive, new { @class = "inputTextSamller" })Exclusive*@
        <input type="checkbox" id="chkExclusive" value="Exclusive" > Exclusive </>
       </td>
   <td>
        @*@Html.CheckBoxFor(m => m.Premier, new { @class = "inputTextSamller" })Premier*@
         <input type="checkbox" id="chkPremier" value="Premier" > Premier </>
   </td>
   <td>Licensee       </td>
   <td>
       @*@Html.TextBoxFor(m => m.Licencee, new { @class = "inputTextSamller" })*@
        <input type="text" id="txtLicencee" />
    </td>
 </tr>
 
  <tr>
   <td>Contract</td>
   <td>
    @*  @Html.TextBoxFor(m => m.Contract, new { @class = "inputTextSamller" })*@
      <input type="text" id="txtContract" />
     </td>
   <td colspan="2">
      @*@Html.TextBoxFor(m => m.ContractNo, new { @class = "inputTextSamller" })*@
      <input type="text" id="txtContractNo" />
      </td>
   
   <td>Channel</td>
   <td>
      @*@Html.TextBoxFor(m => m.Channel, new { @class = "inputTextSamller" })*@
      <input type="text" id="txtChannel" />
      </td>
 </tr>


</table>

</div>

<div>




<table id="tblChild" runat="server">
  <tr>
  <td>Start</td>
  <td>

        @*@Html.TextBoxFor(m => m.StartLicPer, new { @class = "inputTextSamller" })</td>*@
        <input type="text" id="txtStartLicPer" />
  <td>Amort</td>
  <td>
       @*@Html.TextBoxFor(m => m.LicPerAmort, new { @class = "inputTextSamller" })*@
        <input type="text" id="txtLicPerAmort" />
       </td>
   <td>Play</td>
  <td>
        @*@Html.TextBoxFor(m => m.Play, new { @class = "inputTextSamller" })*@
         <input type="text" id="txtPlay" />     
   </td>
  <td>Status</td>
  <td>
        @*@Html.TextBoxFor(m => m.Status, new { @class = "inputTextSamller" })*@
        <input type="text" id="txtStatus" />     
   </td>
   <td>First</td>
  <td>
        @*@Html.TextBoxFor(m => m.FirstShow, new { @class = "inputTextSamller" })*@
         <input type="text" id="txtFirstShow" />     
   </td>
  <td>Paid</td>
  <td>
       @* @Html.TextBoxFor(m => m.PaidRuns, new { @class = "inputTextSamller" })*@
        <input type="text" id="txtPaidRuns" />      
        </td>
       
  </tr>

  <tr>
   <td>End</td>
  <td>
        @*@Html.TextBoxFor(m => m.EndLicPer, new { @class = "inputTextSamller" })*@
         <input type="text" id="txtEndLicPer" />     
        </td>
  <td>Lic</td>
  <td>
        @*@Html.TextBoxFor(m => m.TotLicRuns, new { @class = "inputTextSamller" })*@
         <input type="text" id="txtTotLicRuns" />     
        </td>
   <td>Registration</td>
  <td>
        @*@Html.TextBoxFor(m => m.Reg, new { @class = "inputTextSamller" })*@
         <input type="text" id="txtReg" />     
  </td>
  <td colspan="2">
        @*@Html.TextBoxFor(m => m.LicSName, new { @class = "inputTextSamller" })*@
         <input type="text" id="txtLicName" />     
        
        </td>
  <td>Last</td>
   <td>
         @*@Html.TextBoxFor(m => m.LastShow, new { @class = "inputTextSamller" })*@
          <input type="text" id="txtLastShow" />     
         </td>
  <td>Free</td>
  <td>
        @*@Html.TextBoxFor(m => m.FreeRuns, new { @class = "inputTextSamller" })*@
         <input type="text" id="txtFreeRuns" />     
   </td>
 
  </tr>

</table>
</div>





<div>

<table id="tblGrid">
 <tr>
  <td>
       <div class="subHeading"> Line Up Info </div>
     <div id="gridLineUpInfo" style="width: 430px; height: 250px;">
      </div>
  </td>
  <td>  <div class="subHeading"> Schedule Info </div>
   <div id="gridScheduleInfo" style="width: 430px; height: 250px;">
      </div></td>
 </tr>
 <tr>
  <td>  
     <div id="gridInfo" style="width: 430px; height: 250px;">
      </div></td>
  <td></td>
 </tr>

</table>

<div>
 <table >
     <tr>
    <td align="Right">
        <input id="previousbtn" type="button" value="Prev" onclick="previous_click()" /></td>
    <td align="Right">
       @* <input id="Button2" type="button" value="Next" onclick="ActionNextButton();GetUpdatedView();"/>*@
        <input id="nextbtn" type="button" value="Next" onclick="next_click()"/>
        </td>
   </tr>
 </table>
</div>

</div>


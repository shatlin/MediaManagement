<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <!-- make sure to set 'Copy To Output Directory' option for this file -->
  <!-- go to http://nlog-project.org/wiki/Configuration_file for more information -->
  
  <variable name="PerfomanceLoggerHeaderLayout" value="User,Method,Details,TimeLogged,System RAM (MB)" />
    <variable name="headerException" value="User,Controller, Action,User Exception Message ,Exception,Time " />
    <targets>

      <target name="asyncPerformanceLogger" xsi:type="AsyncWrapper" batchSize="1000">
          
        <target xsi:type="File"
               name="PerformanceLogger"
             
               fileName="${basedir}/logs/PerformanceLogger-${shortdate}.csv"
               keepFileOpen="true"
               archiveFileName="${basedir}/logs/PerformanceLogger-${shortdate}.{##}.csv"
               archiveNumbering="Sequence"
               archiveEvery="Day"
               maxArchiveFiles="7"
               fileAttributes="Compressed"
               bufferSize="1000"
               >
            
          <layout xsi:type="CsvLayout">
            <quoting>Nothing</quoting>
            <quoteChar>","</quoteChar>             
            <column name="User,Method,MethodDetails,Start time,End time,Time Taken,RAMmb" layout="${Message}" />
            <withHeader>true</withHeader>
            <delimiter>Comma</delimiter>
          </layout>
            
        </target> 
          
      </target>
               
        <target name="logException" xsi:type="File" fileName="${basedir}/logs/exceptionLogger-${shortdate}.csv" 
               archiveFileName="${basedir}/logs/exceptionLogger-${shortdate}.{##}.csv" archiveNumbering="Sequence"
               archiveEvery="Day"  maxArchiveFiles="7"  fileAttributes="Compressed" bufferSize="1000">
            
            <layout xsi:type="CsvLayout" delimiter="Comma" withHeader="true" quoting="Nothing" quoteChar=",">
                
                <!--<column name="User" layout="" />
                <column name="Controller" layout="${message}"/>
                <column name="Action" layout="action name" />
                <column name="User Exception Message" layout="${message}" />
                <column name="Exception" layout="${message}" />
                <column name="Date" layout="${longdate}"/>-->
                <column name="User,Controller, Action,User Exception Message ,Exception,Time " layout="${Message}"/>
            </layout>

        </target>
     
    </targets>
    
  <rules>
      
      <logger name="MediaManagerLogger*" writeTo="asyncPerformanceLogger" level="Debug" />
      <logger name="LogException" writeTo="logException" level="Error"/>
      <!--<logger name="*" writeTo="logException" level="Warn"/>
      <logger name="*" writeTo="logException" level="Fatal"/>-->
      
  </rules>

    <!--<layout xsi:type="CsvLayout" delimiter="Tab" withHeader="false">
        <column name="time" layout="${longdate}" />
        <column name="level" layout="${level:upperCase=true}"/>
        <column name="message" layout="${message}" />
        <column name="callsite" layout="${callsite:includeSourcePath=true}" />
        <column name="stacktrace" layout="${stacktrace:topFrames=10}" />
        <column name="exception" layout="${exception:format=ToString}"/>
        --><!--<column name="logger" layout="${logger}"/>--><!--
    </layout>
    </target>

    --><!--during normal execution only log certain messages--><!--
    <defaultFilter>level >= LogLevel.Warn</defaultFilter>

    --><!--if there is at least one error, log everything from trace level--><!--
    <when exists="level >= LogLevel.Error" filter="level >= LogLevel.Trace" />
    </wrapper-target>
    </wrapper-target>

    </targets>

    <rules>
        <logger name="*" minlevel="Trace" writeTo="smartLog"/>
    </rules>-->
    
</nlog>